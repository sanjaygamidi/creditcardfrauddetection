# -*- coding: utf-8 -*-
"""creditcardfraud detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dRqgoNQ94a9wSjrqTe5R8Qyrnih3hXqu
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

# loading the dataset to a Pandas DataFrame
creditcarddata = pd.read_csv("/content/sample_data/creditcard.csv")

creditcarddata.head()

creditcarddata.tail()

creditcarddata.info() #information of the dataset

creditcarddata.isnull().sum() #To check the missing values in the columns

# distribution of legit transactions & fraudulent transactions
creditcarddata['Class'].value_counts()

# separating the data for analysis
legit = creditcarddata[creditcarddata.Class == 0]
fraud = creditcarddata[creditcarddata.Class == 1]

print(legit.shape)
print(fraud.shape)

# statistical measures of the data
legit.Amount.describe()

fraud.Amount.describe()

# compare the values for the transactions
creditcarddata.groupby('Class').mean()

legit_sample = legit.sample(n=300)

new_dataset = pd.concat([legit_sample, fraud], axis=0)

new_dataset.head()

new_dataset.tail()

new_dataset['Class'].value_counts()

new_dataset.groupby('Class').mean()

X = new_dataset.drop(columns='Class', axis=1)
Y = new_dataset['Class']

print(X)
#####
#####
print(Y)

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, stratify=Y, random_state=2)

print(X.shape, X_train.shape, X_test.shape)

"""##Model Training ## Logical Reasoning"""

model = LogisticRegression()
model.fit(X_train, Y_train)

X_train_prediction = model.predict(X_train)
training_data_accuracy = accuracy_score(X_train_prediction, Y_train)

print('Accuracy on Training data : ', training_data_accuracy)

# accuracy on test data
X_test_prediction = model.predict(X_test)
testdataaccuracy = accuracy_score(X_test_prediction, Y_test)

print('Accuracy on the Test Data : ', test_data_accuracy)